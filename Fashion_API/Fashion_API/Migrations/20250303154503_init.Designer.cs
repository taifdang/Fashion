// <auto-generated />
using System;
using Fashion_API.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Fashion_API.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250303154503_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Fashion_API.Model.Categories", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("productTypeId")
                        .HasColumnType("int");

                    b.Property<string>("slug")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("productTypeId");

                    b.ToTable("categories");

                    b.HasData(
                        new
                        {
                            id = 1,
                            name = "Áo thun",
                            productTypeId = 1,
                            slug = "ao-thun"
                        },
                        new
                        {
                            id = 2,
                            name = "Áo sơ mi",
                            productTypeId = 1,
                            slug = "ao-so-mi"
                        },
                        new
                        {
                            id = 3,
                            name = "Quần thun",
                            productTypeId = 2,
                            slug = "quan-thun"
                        },
                        new
                        {
                            id = 4,
                            name = "Quần kaki",
                            productTypeId = 2,
                            slug = "quan-kaki"
                        },
                        new
                        {
                            id = 5,
                            name = "Mũ lưỡi trai",
                            productTypeId = 3,
                            slug = "mu-luoi-trai"
                        },
                        new
                        {
                            id = 6,
                            name = "Túi xách",
                            productTypeId = 4,
                            slug = "tui-xach"
                        });
                });

            modelBuilder.Entity("Fashion_API.Model.Color", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("hexCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("colors");

                    b.HasData(
                        new
                        {
                            id = 1,
                            hexCode = "#000000",
                            name = "Đen"
                        },
                        new
                        {
                            id = 2,
                            hexCode = "#FFFFFF",
                            name = "Trắng"
                        },
                        new
                        {
                            id = 3,
                            hexCode = "#0000FF",
                            name = "Xanh Dương"
                        },
                        new
                        {
                            id = 4,
                            hexCode = "#FF0000",
                            name = "Đỏ"
                        },
                        new
                        {
                            id = 5,
                            hexCode = "#008000",
                            name = "Xanh Lá"
                        });
                });

            modelBuilder.Entity("Fashion_API.Model.ProductGallery", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<Guid?>("imageKey")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("imageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("imageKey");

                    b.ToTable("productGalleries");
                });

            modelBuilder.Entity("Fashion_API.Model.Products", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("categoryId")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("discount")
                        .HasColumnType("float");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<string>("slug")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("categoryId");

                    b.ToTable("products");

                    b.HasData(
                        new
                        {
                            id = 1,
                            categoryId = 1,
                            description = "mo ta",
                            discount = 5.0,
                            name = "pÁo thun",
                            price = 500000.0,
                            slug = "ao-thun"
                        },
                        new
                        {
                            id = 2,
                            categoryId = 2,
                            description = "mo ta",
                            discount = 0.0,
                            name = "pÁo sơ mi",
                            price = 520000.0,
                            slug = "ao-so-mi"
                        },
                        new
                        {
                            id = 3,
                            categoryId = 3,
                            description = "mo ta",
                            discount = 15.0,
                            name = "pQuần thun",
                            price = 400000.0,
                            slug = "quan-thun"
                        },
                        new
                        {
                            id = 4,
                            categoryId = 4,
                            description = "mo ta",
                            discount = 5.0,
                            name = "pQuần kaki",
                            price = 460000.0,
                            slug = "quan-kaki"
                        },
                        new
                        {
                            id = 5,
                            categoryId = 5,
                            description = "mo ta",
                            discount = 5.0,
                            name = "pMũ lưỡi trai",
                            price = 500000.0,
                            slug = "mu-luoi-trai"
                        },
                        new
                        {
                            id = 6,
                            categoryId = 6,
                            description = "mo ta ",
                            discount = 5.0,
                            name = "púi xách",
                            price = 500000.0,
                            slug = "tui-xach"
                        });
                });

            modelBuilder.Entity("Fashion_API.Model.ProductStock", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("productVariantId")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("productVariantId")
                        .IsUnique();

                    b.ToTable("ProductStocks");
                });

            modelBuilder.Entity("Fashion_API.Model.ProductTypes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("slug")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("productTypes");

                    b.HasData(
                        new
                        {
                            id = 1,
                            name = "Áo",
                            slug = "ao"
                        },
                        new
                        {
                            id = 2,
                            name = "Quần",
                            slug = "quan"
                        },
                        new
                        {
                            id = 3,
                            name = "Nón",
                            slug = "non"
                        },
                        new
                        {
                            id = 4,
                            name = "Phụ kiện",
                            slug = "phu-kien"
                        });
                });

            modelBuilder.Entity("Fashion_API.Model.ProductVariant", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("colorId")
                        .HasColumnType("int");

                    b.Property<Guid?>("imageKey")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.Property<int>("sizeId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("colorId");

                    b.HasIndex("productId");

                    b.HasIndex("sizeId");

                    b.ToTable("productVariants");
                });

            modelBuilder.Entity("Fashion_API.Model.Size", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("size");

                    b.HasData(
                        new
                        {
                            id = 1,
                            name = "S"
                        },
                        new
                        {
                            id = 2,
                            name = "M"
                        },
                        new
                        {
                            id = 3,
                            name = "L"
                        },
                        new
                        {
                            id = 4,
                            name = "XL"
                        },
                        new
                        {
                            id = 5,
                            name = "2XL"
                        });
                });

            modelBuilder.Entity("Fashion_API.Model.Categories", b =>
                {
                    b.HasOne("Fashion_API.Model.ProductTypes", "productTypes")
                        .WithMany("categories")
                        .HasForeignKey("productTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("productTypes");
                });

            modelBuilder.Entity("Fashion_API.Model.ProductGallery", b =>
                {
                    b.HasOne("Fashion_API.Model.ProductVariant", "productVariant")
                        .WithMany("productGalleries")
                        .HasForeignKey("imageKey")
                        .HasPrincipalKey("imageKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("productVariant");
                });

            modelBuilder.Entity("Fashion_API.Model.Products", b =>
                {
                    b.HasOne("Fashion_API.Model.Categories", "categories")
                        .WithMany("products")
                        .HasForeignKey("categoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categories");
                });

            modelBuilder.Entity("Fashion_API.Model.ProductStock", b =>
                {
                    b.HasOne("Fashion_API.Model.ProductVariant", "productVariant")
                        .WithOne("productStock")
                        .HasForeignKey("Fashion_API.Model.ProductStock", "productVariantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("productVariant");
                });

            modelBuilder.Entity("Fashion_API.Model.ProductVariant", b =>
                {
                    b.HasOne("Fashion_API.Model.Color", "color")
                        .WithMany("productVariants")
                        .HasForeignKey("colorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fashion_API.Model.Products", "products")
                        .WithMany("productVariant")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fashion_API.Model.Size", "size")
                        .WithMany("productVariants")
                        .HasForeignKey("sizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("color");

                    b.Navigation("products");

                    b.Navigation("size");
                });

            modelBuilder.Entity("Fashion_API.Model.Categories", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("Fashion_API.Model.Color", b =>
                {
                    b.Navigation("productVariants");
                });

            modelBuilder.Entity("Fashion_API.Model.Products", b =>
                {
                    b.Navigation("productVariant");
                });

            modelBuilder.Entity("Fashion_API.Model.ProductTypes", b =>
                {
                    b.Navigation("categories");
                });

            modelBuilder.Entity("Fashion_API.Model.ProductVariant", b =>
                {
                    b.Navigation("productGalleries");

                    b.Navigation("productStock")
                        .IsRequired();
                });

            modelBuilder.Entity("Fashion_API.Model.Size", b =>
                {
                    b.Navigation("productVariants");
                });
#pragma warning restore 612, 618
        }
    }
}
