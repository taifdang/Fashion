// <auto-generated />
using System;
using Fashion_API.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Fashion_API.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Fashion_API.Model.Categories", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("type_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("type_id");

                    b.ToTable("categories");

                    b.HasData(
                        new
                        {
                            id = 1,
                            name = "Áo thun",
                            type_id = 1
                        },
                        new
                        {
                            id = 2,
                            name = "Áo sơ mi",
                            type_id = 1
                        },
                        new
                        {
                            id = 3,
                            name = "Quần thun",
                            type_id = 2
                        },
                        new
                        {
                            id = 4,
                            name = "Quần kaki",
                            type_id = 2
                        },
                        new
                        {
                            id = 5,
                            name = "Mũ lưỡi trai",
                            type_id = 3
                        },
                        new
                        {
                            id = 6,
                            name = "Túi xách",
                            type_id = 4
                        });
                });

            modelBuilder.Entity("Fashion_API.Model.ProductGallery", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("image_url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("product_id");

                    b.ToTable("product_images");
                });

            modelBuilder.Entity("Fashion_API.Model.Products", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("category_id")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("discount")
                        .HasColumnType("float");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.Property<string>("total_sold")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("category_id");

                    b.ToTable("products");
                });

            modelBuilder.Entity("Fashion_API.Model.ProductTypes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("product_types");

                    b.HasData(
                        new
                        {
                            id = 1,
                            name = "Áo"
                        },
                        new
                        {
                            id = 2,
                            name = "Quần"
                        },
                        new
                        {
                            id = 3,
                            name = "Nón"
                        },
                        new
                        {
                            id = 4,
                            name = "Phụ kiện"
                        });
                });

            modelBuilder.Entity("Fashion_API.Model.ProductVariant", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<double>("new_price")
                        .HasColumnType("float");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<string>("sku")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("product_id");

                    b.ToTable("product_variant");
                });

            modelBuilder.Entity("Fashion_API.Model.Users", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("avatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("is_looked")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("phone")
                        .HasColumnType("int");

                    b.Property<int>("role")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Fashion_API.Model.Variants", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("variants");

                    b.HasData(
                        new
                        {
                            id = 1,
                            name = "Màu sắc"
                        },
                        new
                        {
                            id = 2,
                            name = "Kích cỡ"
                        });
                });

            modelBuilder.Entity("Fashion_API.Model.VariantValues", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("variant_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("variant_id");

                    b.ToTable("variant_values");

                    b.HasData(
                        new
                        {
                            id = 1,
                            value = "Đen",
                            variant_id = 1
                        },
                        new
                        {
                            id = 2,
                            value = "Trắng",
                            variant_id = 1
                        },
                        new
                        {
                            id = 3,
                            value = "Xám",
                            variant_id = 1
                        },
                        new
                        {
                            id = 4,
                            value = "Nâu",
                            variant_id = 1
                        },
                        new
                        {
                            id = 5,
                            value = "Xanh lá",
                            variant_id = 1
                        },
                        new
                        {
                            id = 6,
                            value = "Xanh lam",
                            variant_id = 1
                        },
                        new
                        {
                            id = 7,
                            value = "Cam",
                            variant_id = 1
                        },
                        new
                        {
                            id = 8,
                            value = "Tím",
                            variant_id = 1
                        },
                        new
                        {
                            id = 9,
                            value = "Đỏ",
                            variant_id = 1
                        },
                        new
                        {
                            id = 10,
                            value = "Vàng",
                            variant_id = 1
                        },
                        new
                        {
                            id = 11,
                            value = "S",
                            variant_id = 2
                        },
                        new
                        {
                            id = 12,
                            value = "M",
                            variant_id = 2
                        },
                        new
                        {
                            id = 13,
                            value = "L",
                            variant_id = 2
                        },
                        new
                        {
                            id = 14,
                            value = "XL",
                            variant_id = 2
                        },
                        new
                        {
                            id = 15,
                            value = "2XL",
                            variant_id = 2
                        },
                        new
                        {
                            id = 16,
                            value = "3XL",
                            variant_id = 2
                        },
                        new
                        {
                            id = 17,
                            value = "4XL",
                            variant_id = 2
                        });
                });

            modelBuilder.Entity("Fashion_API.Model.Categories", b =>
                {
                    b.HasOne("Fashion_API.Model.ProductTypes", "product_types")
                        .WithMany("categories")
                        .HasForeignKey("type_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product_types");
                });

            modelBuilder.Entity("Fashion_API.Model.ProductGallery", b =>
                {
                    b.HasOne("Fashion_API.Model.Products", "products")
                        .WithMany("product_images")
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("products");
                });

            modelBuilder.Entity("Fashion_API.Model.Products", b =>
                {
                    b.HasOne("Fashion_API.Model.Categories", "categories")
                        .WithMany("products")
                        .HasForeignKey("category_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categories");
                });

            modelBuilder.Entity("Fashion_API.Model.ProductVariant", b =>
                {
                    b.HasOne("Fashion_API.Model.Products", "products")
                        .WithMany("product_variant")
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("products");
                });

            modelBuilder.Entity("Fashion_API.Model.VariantValues", b =>
                {
                    b.HasOne("Fashion_API.Model.Variants", "variants")
                        .WithMany("variant_values")
                        .HasForeignKey("variant_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("variants");
                });

            modelBuilder.Entity("Fashion_API.Model.Categories", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("Fashion_API.Model.Products", b =>
                {
                    b.Navigation("product_images");

                    b.Navigation("product_variant");
                });

            modelBuilder.Entity("Fashion_API.Model.ProductTypes", b =>
                {
                    b.Navigation("categories");
                });

            modelBuilder.Entity("Fashion_API.Model.Variants", b =>
                {
                    b.Navigation("variant_values");
                });
#pragma warning restore 612, 618
        }
    }
}
